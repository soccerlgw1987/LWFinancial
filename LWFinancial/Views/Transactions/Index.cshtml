@model IEnumerable<LWFinancial.Models.Transaction>

@using LWFinancial.Helpers
@using LWFinancial.Enumerations
@using Microsoft.AspNet.Identity

<section role="main" class="content-body">
    <header class="page-header">
        <h2>Transactions List</h2>

        <div class="right-wrapper pull-right">
            <ol class="breadcrumbs">
                <li>
                    <a href="@Url.Action("Index","Households")">
                        <i class="fa fa-home"></i>
                    </a>
                </li>
                <li><span>Dashboard</span></li>
                <li><span>Transactions</span></li>
            </ol>

            <a class="sidebar-right-toggle" data-open="sidebar-right"><i class="fa fa-chevron-left"></i></a>
        </div>
    </header>

    <!-- start: page -->
    <section class="panel">
        <header class="panel-heading">
            <div class="panel-actions">
                <a href="#" class="fa fa-caret-down"></a>
            </div>

            <h2 class="panel-title">Transactions</h2>
        </header>
        <div class="panel-body">
            <table class="table table-bordered table-striped mb-none" id="datatable-editable">
                <thead>
                    <tr>
                        <th>@Html.DisplayName("Account Name")</th>
                        <th>@Html.DisplayName("Budget Item")</th>
                        <th>@Html.DisplayNameFor(model => model.Name)</th>
                        <th>@Html.DisplayNameFor(model => model.Type)</th>
                        <th>@Html.DisplayNameFor(model => model.Amount)</th>
                        <th>@Html.DisplayName("Reconciled Amount")</th>
                        <th>@Html.DisplayName("Entered By")</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="gradeX">
                            <td>@Html.DisplayFor(modelItem => item.Account.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.BudgetItem.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.Type)</td>
                            <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                            <td>@Html.DisplayFor(modelItem => item.ReconciledAmount)</td>
                            <td>@Html.DisplayFor(modelItem => item.EnteredBy.FullName)</td>
                            <td class="actions-hover actions-fade">
                                <a style="color:white" class="mb-xs mt-xs mr-xs modal-with-move-anim btn btn-info" href="#editModal">Edit</a>
                                <a style="color:white" class="mb-xs mt-xs mr-xs modal-with-move-anim btn btn-danger" href="#deleteModal">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </section>
    <!-- end: page -->

</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@*@{
        ViewBag.Title = "Index";
    }

    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Account.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BudgetItem.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EnteredBy.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Updated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReconciledAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Reconciled)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Account.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BudgetItem.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnteredBy.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Updated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReconciledAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Reconciled)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
    }

    </table>*@
